<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lishixi.mapper.EmpMapper">
    <!--mybatis基于接口代理模式开发下
    1.接口和映射文件名要一致不包括后缀（EmpMapper和EmpMapper.xml）
    2.namespace要写接口的全路径名
    3.id要和接口定义的的方法名一致
    4.要保证接口和映射文件编译后放在同一个classes文件夹下（EmpMapper和EmpMapper.xml）
    -->
    <select id="findAll" resultType="emp">
    select * from emp
    </select>
    <!--单个基本数据类型作为参数
    根据员工编号查询员工信息
    -->
    <select id="findByEmpno" resultType="emp">
        select * from emp where empno = #{empno}
    </select>
    <!--多个基本数据类型作为参数
    public  Emp findByDeptAndSal(@Param("deptno") int deptno,@Param("sal") double sal);
    根据员工部门编号和薪资等级查询员工信息
    -->
    <select id="findByDeptAndSal" resultType="emp">
        select * from emp where deptno=#{deptno} and sal >= #{sal}
    </select>
    <!--单个引用类型作为参数 {}中写属性名
    List<Emp> findByDeptAndSal2(Emp emp);
    -->
    <select id="findByDeptAndSal2" resultType="emp" parameterType="emp">
        select * from emp where deptno=#{deptno} and sal=#{sal}
    </select>
    <!--多个引用类型作为参数
    List<Emp> findByDeptAndSal3(Emp emp1,Emp emp2);
    -->
    <select id="findByDeptAndSal3" resultType="emp">
        select * from emp where deptno=#{arg0.deptno} and sal=#{arg1.sal}
    </select>

    <!--多个引用类型作为参数
    List<Emp> findByDeptAndSal3(@Param("emp1") Emp emp1,@Param("emp2") Emp emp2);
    如果用@Param定义了别名,那么就不能使用arg*.属性名,但是可以使用param*.属性名和别名.属性名
    -->
    <select id="findByDeptAndSal4" resultType="emp">
        select * from emp where deptno=#{emp1.deptno} and sal=#{emp2.sal}
    </select>
    <!--map作为参数类型 {}中放键的名字
    List <Emp> findByDeptAndSal4(Map<String,Object> map);
    -->
    <select id="findByDeptAndSal5" resultType="emp">
        select * from emp where deptno=#{deptno} and sal=#{sal}
    </select>
    <!--模糊查询
    List <Emp> findByEname(String ename);
    -->
    <select id="findByEname" resultType="emp">
        select * from emp where ename like concat('%',#{ename},'%')
    </select>
    <!--int addEmp(Emp emp);-->
    <insert id="addEmp">
       insert into emp values (DEFAULT ,#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})
    </insert>
    <!--int deleteEmpByEmpno(int empno);-->
    <delete id="deleteEmpByEmpno">
        delete from emp where empno=#{empno}
    </delete>
    <!--int updateEmpByEmpno(Integer empno);-->
    <update id="updateEnameByEmpno">
        update emp set ename =#{ename} where empno =#{empno}
    </update>

</mapper>